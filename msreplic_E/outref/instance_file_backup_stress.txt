# Stress test for backup of instance files. Take 10 backups on the secondary as
# primary is going on with updates. Then attempt to use them on the secondary
# and see that the connection is established to the primary.
Files Created in ##TEST_PATH##:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
a.dat
b.dat
mumps.dat
Files Created in ##FILTERED##_REMOTE_TEST_PATH_/instance2:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
a.dat
b.dat
mumps.dat
Files Created in ##FILTERED##_REMOTE_TEST_PATH_/instance3:
Using: ##SOURCE_PATH##/mumps -run GDE
mumps.gld
Using: ##SOURCE_PATH##/mupip
a.dat
b.dat
mumps.dat
#- some common data on INST1 and INST2
==Executing MULTISITE_REPLIC 'START INST1 INST2'==
Starting Primary Source Server in ##TEST_PATH##
Starting Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2
sleep 30
unset echo
==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==
==Executing MULTISITE_REPLIC 'STOP INST1 INST2'==
Shutting down Passive Source Server and Receiver Server in ##FILTERED##_REMOTE_TEST_PATH_/instance2
Shutting down Primary Source Server Server in ##TEST_PATH##
###################################################################
#- On the primary, start the update loop
#- On the receiver INST2, do backups in the meantime:
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2'==
==Executing MULTISITE_REPLIC 'RUN SRC=INST1 RCV=INST2 echo secondary ready'==
secondary ready
##FILTERED##GTM_TEST_DEBUGINFO.*
###################################################################
# backup iteration 1
###################################################################
# backup iteration 2
###################################################################
# backup iteration 3
###################################################################
# backup iteration 4
###################################################################
# backup iteration 5
###################################################################
# backup iteration 6
###################################################################
# backup iteration 7
###################################################################
# backup iteration 8
###################################################################
# backup iteration 9
###################################################################
# backup iteration 10
##FILTERED##GTM_TEST_DEBUGINFO.*
###################################################################
# Backups complete on INST2, signal the updates to stop:
==Executing MULTISITE_REPLIC 'REFRESHLINK INST1 INST2'==
###################################################################
#- Test all backups (10 to 1):
###################################################################
# restore iteration count 10
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir10 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir10) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_10_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 9
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir9 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir9) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_9_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 8
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir8 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir8) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_8_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 7
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir7 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir7) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_7_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 6
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir6 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir6) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_6_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 5
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir5 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir5) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_5_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 4
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir4 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir4) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_4_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 3
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir3 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir3) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_3_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 2
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir2 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir2) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_2_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
# restore iteration count 1
##FILTERED##GTM_TEST_DEBUGINFO.*
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/backup_dbjnl.csh cpdir1 "*.dat *.gld *.mjl* *.repl"'==
#- Revert to bakdircntx (bakdir1) contents, and cut new journal files (not traced below)
==Executing MULTISITE_REPLIC 'STARTRCV INST1 INST2 waitforconnect updateresync=sec_1_mumps.repl'==
# - check that the connection is alive by doing a checkhealth and checking the backlog reduces
###################################################################
##FILTERED##GTM_TEST_DEBUGINFO.*
#- Wrap-up
==Executing MULTISITE_REPLIC 'SYNC INST1 INST2'==
#	--> We expect it to sync correctly.
==Executing MULTISITE_REPLIC 'SYNC ALL_LINKS'==
==Executing MULTISITE_REPLIC 'STOP ALL_LINKS OFF'==
==Executing MULTISITE_REPLIC 'EXTRACT INST1 INST2'==
DATABASE EXTRACT PASSED
==Executing MULTISITE_REPLIC 'RUN INST1 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST2 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
==Executing MULTISITE_REPLIC 'RUN INST3 $gtm_tst/com/dbcheck_base.csh '==
##SOURCE_PATH##/mupip
##SOURCE_PATH##/mupip integ -REG *
No errors detected by integ.
