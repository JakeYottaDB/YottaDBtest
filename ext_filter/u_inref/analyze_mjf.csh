#!/usr/local/bin/tcsh -f
#################################################################
#								#
# Copyright (c) 2012-2016 Fidelity National Information		#
# Services, Inc. and/or its subsidiaries. All rights reserved.	#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################
# This routine creates mumps.mjf on the secondary for inspection
# It is looking at the following 2 entries in this file though many of the fields will vary
# 0x000102c0 [0x0030] :: NULL   \62528,46460\3\411772302\20529\0\2\0\2
# 0x00010400 [0x0048] :: USET   \62528,46460\5\2321016803\20529\0\4\0\4\2\0\^trjkl="4567"

$MUPIP journal -extract -noverify -detail -for -fences=none mumps.mjl >& mupip_extr.out
if (! -f mumps.mjf) then
	echo "TEST-E-ERROR, unable to create mumps.mjf"
	exit 1
endif
# if not ordinary replication check the stream sequence numbers for the NULL and wrapped SET which were given bogus
# stream sequence numbers.  In the case of A->P (1) the correct stream sequence number is generated by mupip.  In the
# case of P->Q (2) the bogus stream sequence number is saved prior to the external filter, and restored after.
if ( 0 != $test_replic_suppl_type ) then
	$tst_awk -F\\ '$0 ~ /NULL/ {print $9}' < mumps.mjf > null_strm_seqno
	set null_strm_seqno = `cat null_strm_seqno`
	if (2 != $null_strm_seqno) echo "TEST-E-ERROR, strm_seqno for NULL is $null_strm_seqno but expected 2"
	$tst_awk -F\\ '$0 ~ /trjkl/ {print $9}' < mumps.mjf > set_strm_seqno
	set set_strm_seqno = `cat set_strm_seqno`
	if (4 != $set_strm_seqno) echo "TEST-E-ERROR, strm_seqno for NULL is $set_strm_seqno but expected 4"
endif
# Test the update_num field for the wrapped transaction where the second set was given a bogus update number
$tst_awk -F\\ '$0 ~ /trjkl/ {print $10}' < mumps.mjf > update_num
set update_num = `cat update_num`
if (2 != $update_num) echo "TEST-E-ERROR, update_num equals $update_num but expected 2"
